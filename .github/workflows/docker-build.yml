name: Build and Push Docker Image

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=semver,pattern={{major}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Generate image digest
      id: digest
      run: |
        echo "IMAGE_DIGEST=$(docker buildx imagetools inspect ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest --format '{{.Manifest.Digest}}')" >> $GITHUB_OUTPUT

    - name: Create deployment artifact
      run: |
        mkdir -p artifacts
        cat > artifacts/deployment-info.json << EOF
        {
          "image": "${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}",
          "tags": $(echo '${{ steps.meta.outputs.tags }}' | jq -R 'split("\n") | map(select(length > 0))'),
          "digest": "${{ steps.digest.outputs.IMAGE_DIGEST }}",
          "build_date": "$(date -u +%Y-%m-%dT%H:%M:%S.%3NZ)",
          "commit_sha": "${{ github.sha }}",
          "ref": "${{ github.ref }}"
        }
        EOF
        
        cat > artifacts/docker-run.sh << 'EOF'
        #!/bin/bash
        # Script to run the pages-proxy container
        # Set your environment variables in a .env file or export them before running
        
        IMAGE="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
        
        docker run --rm -p 3000:3000 \
          -e PORT=3000 \
          -e GITHUB_APP_ID="$GITHUB_APP_ID" \
          -e GITHUB_INSTALLATION_ID="$GITHUB_INSTALLATION_ID" \
          -e GITHUB_WEBHOOK_SECRET="$GITHUB_WEBHOOK_SECRET" \
          -e GITHUB_APP_PRIVATE_KEY="$GITHUB_APP_PRIVATE_KEY" \
          -e CLOUDFLARE_ZONE_ID="$CLOUDFLARE_ZONE_ID" \
          -e CLOUDFLARE_API_TOKEN="$CLOUDFLARE_API_TOKEN" \
          -e CLOUDFLARE_EMAIL="$CLOUDFLARE_EMAIL" \
          -e CLOUDFLARE_GLOBAL_API_KEY="$CLOUDFLARE_GLOBAL_API_KEY" \
          "$IMAGE"
        EOF
        
        chmod +x artifacts/docker-run.sh

    - name: Upload deployment artifacts
      uses: actions/upload-artifact@v4
      with:
        name: deployment-artifacts-${{ github.run_number }}
        path: artifacts/
        retention-days: 30

    - name: Output image information
      run: |
        echo "### 🐳 Docker Image Built Successfully" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Image:** \`${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Available Tags:**" >> $GITHUB_STEP_SUMMARY
        echo '${{ steps.meta.outputs.tags }}' | while read tag; do
          if [ -n "$tag" ]; then
            echo "- \`$tag\`" >> $GITHUB_STEP_SUMMARY
          fi
        done
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Pull command:**" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
        echo "docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Deployment artifacts are available for download with container run scripts and metadata.**" >> $GITHUB_STEP_SUMMARY